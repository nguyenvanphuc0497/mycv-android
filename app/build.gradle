apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.google.gms.google-services'

// Add the Fabric plugin.
apply plugin: 'io.fabric'

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

android {

    def APP_NAME = "Your CV"

    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "vanphuc0497.job.mycv"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"

            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        switch (variant.getName()) {
            case "release":
                variant.resValue("string", "file_provider", "${variant.applicationId}.fileprovider")
                variant.resValue("string", "app_name", "${APP_NAME}")
                variant.buildConfigField "String", "BASE_API_URL", '"https://example.com"'
                variant.buildConfigField "String", "BASE_API_URL_24H_RSS", '"https://24h.com.vn/upload/rss"'
                break
            case "debug":
                variant.resValue("string", "file_provider", "${variant.applicationId}.fileprovider")
                variant.resValue("string", "app_name", "[DEV]${APP_NAME}")
                variant.buildConfigField "String", "BASE_API_URL", '"https://demo-android-app-link.herokuapp.com"'
                variant.buildConfigField "String", "BASE_API_URL_24H_RSS", '"https://24h.com.vn/upload/rss/"'
        }
    }

    lintOptions {
        htmlReport true
        htmlOutput file("lint-report.html")
        abortOnError false
        warningsAsErrors true
    }
}

dependencies {
    def retrofit2Version = "2.4.0"
    def okhttp3Version = "3.11.0"
    def rxJava = "2.2.2"
    def rxAndroid = "2.1.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // add the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics:17.2.2'

    // Add the Firebase Crashlytics dependency.
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // retrofit 2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2Version" // JSON Converter
    implementation "com.squareup.retrofit2:converter-simplexml:$retrofit2Version" // XML Converter
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2Version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"

    // Ok Http
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"

    // Qr Code Scanner
    implementation "me.dm7.barcodescanner:zxing:1.9.13"

    implementation('com.journeyapps:zxing-android-embedded:4.1.0') { transitive = false }
    implementation 'com.google.zxing:core:3.3.3'
}

apply from: './code_quality_tools/checkstyle.gradle'
